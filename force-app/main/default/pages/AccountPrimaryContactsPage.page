<apex:page standardController="Account" extensions="primaryContactExtension" sidebar="true" showHeader="true">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <title>Account Primary Contacts</title>
        <!-- Import the Design System style sheet -->
        <apex:slds />
    </head>

    <body>
        <apex:form>
            <apex:pageBlock title="Account Primary Contact">
                <!--Buttons -->
                <apex:pageBlockButtons>
                    <apex:commandButton action="{!save}" value="Save" />
                    <apex:commandButton action="{!cancel}" value="Cancel" />
                </apex:pageBlockButtons>
                <!--Input form -->
                <apex:pageBlockSection columns="2">
                    <apex:inputField value="{!Account.Name}" />
                    <apex:inputField value="{!Account.AccountNumber}" />
                </apex:pageBlockSection>
                <apex:pageBlockSection columns="2">
                    <apex:inputField value="{!Account.Type}" />
                    <apex:inputField value="{!Account.Active__c}" />
                </apex:pageBlockSection>
                <apex:pageBlockSection columns="2">
                    <apex:inputField value="{!Account.Phone}" />
                    <apex:inputField value="{!Account.Fax}" />
                </apex:pageBlockSection>
                
            </apex:pageBlock>
        </apex:form>
        <apex:form>
            <apex:pageBlock title="Search related contacts">
                <apex:inputText label="Search" value="{!searchVar}" />
                <apex:commandButton value="Search" reRender="relatedTable" />
            </apex:pageBlock>
        </apex:form>
        <apex:pageBlock title="Related Contacts">
            <apex:pageBlockTable value="{!relatedContacts}" var="contact" rows="1000" id="relatedTable">
                <apex:column value="{!contact.Name}" />
                <apex:column value="{!contact.Title}" />
                <apex:column value="{!contact.Phone}" />
                <apex:column value="{!contact.Is_Primary_Contact__c}" />
                <!-- Show an icon if this contact is the primary contact -->
                <apex:column rendered="{! If(contact.Is_Primary_Contact__c==true ,true,false) }">
                    <apex:image url="https://test.salesforce.com/img/icon/macro24.png" />
                </apex:column>
                <!-- Show Set As Primary link if the current contact is not the primary contact -->
                <apex:column rendered="{! If(contact.Is_Primary_Contact__c==true ,false,true) }" >
                    <apex:form>
                        <apex:commandLink action="{!showPopup}" reRender="popup">
                            Set As Primary
                            <apex:param name="PrimaryContact" value="{!contact.Id}" assignTo="{!primContactId}" />
                        </apex:commandLink>
                    
                        <!-- Popup works very slow in pure apex. A possible solution would be using javascript, -->
                        <!-- But by using js you introduce the possibility of cross-browser and maintenance issues-->
                        <!-- That you don't have while using visualforce. -->
                        <apex:outputPanel id="popup">
                            <apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!displayPopUp}" />
                            <apex:outputPanel styleClass="custPopup" layout="block" rendered="{!displayPopUp}">
                                Are you sure you want to set this contact as your PrimaryContact?
                                <br/>
                                <apex:commandButton value="Yes" action="{!setPrimaryContact}" reRender="relatedTable">
                                    <apex:actionSupport event="onclick" action="{!closePopup}" reRender="popup"/>
                                </apex:commandButton>
                                <apex:commandButton value="No" action="{!closePopup}" reRender="popup" />
                            </apex:outputPanel>
                        </apex:outputPanel>
                    </apex:form>
                </apex:column>
            </apex:pageBlockTable>
        </apex:pageBlock>

    </body>

    <style type="text/css">
        .custPopup {
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9999;
            left: 50%;
            padding: 10px;
            position: absolute;
            /* These are the 3 css properties you will need to change so the popup
                        displays in the center of the screen. First set the width. Then set
                        margin-left to negative half of what the width is. You can add
                        the height property for a fixed size pop up if you want.*/
            width: 500px;
            margin-left: -250px;
            top: 100px;
        }
    
        .popupBackground {
            background-color: black;
            opacity: 0.20;
            filter: alpha(opacity=20);
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 9998;
        }
    </style>
</apex:page>